package forms;

/**
 *
 * @author Nelba Barreto
 */
import forms.ABM.FacturasProvDet;
import db.bdOracle;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.UIManager;
import models.Empresa;
import models.FacturaProvDet;
import utils.Formulario;

public class Main extends javax.swing.JFrame {

    private List<Empresa> empresas = new ArrayList<>();
    private List<FacturaProvDet> facturasProvDet = new ArrayList<>();
    private static bdOracle conexion;
    private String msg;

    public Main(bdOracle bd) {
        conexion = bd;
        initComponents();
    }

    public List<FacturaProvDet> getFacturasProvDet() {
        return facturasProvDet;
    }

    public void setFacturasProvDet(List<FacturaProvDet> facturasProvDet) {
        this.facturasProvDet = facturasProvDet;
    }

    public JTable gettFacturaProvDet() {
        return tFacturaProvDet;
    }

    public void settFacturaProvDet(JTable tFacturaProvDet) {
        this.tFacturaProvDet = tFacturaProvDet;
    }

    public static bdOracle getConexion() {
        return conexion;
    }

    public static void setConexion(bdOracle conexion) {
        Main.conexion = conexion;
    }

    public JTextField getTfNroFactProv() {
        return tfNroFactProv;
    }

    public void setTfNroFactProv(JTextField tfNroFactProv) {
        this.tfNroFactProv = tfNroFactProv;
    }

    public void run() {
        Main main = new Main(conexion);
        main.setVisible(true);
        main.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        UIManager.put("TabbedPane.selected", new Color(229, 232, 237));
        tpPrimary = new javax.swing.JTabbedPane();
        pParametros = new javax.swing.JPanel();
        tpSParametros = new javax.swing.JTabbedPane();
        pEmpresas = new javax.swing.JPanel();
        lId = new javax.swing.JLabel();
        lId1 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        tfDescripcion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lEmpresa = new javax.swing.JList<>();
        bCreate1 = new javax.swing.JButton();
        bUpdate1 = new javax.swing.JButton();
        bDelete1 = new javax.swing.JButton();
        lMsg1 = new javax.swing.JLabel();
        pMantenimientos = new javax.swing.JPanel();
        tpSMantenimiento = new javax.swing.JTabbedPane();
        pFacturaProv = new javax.swing.JPanel();
        laEmpresa = new javax.swing.JLabel();
        cxEmpresa = new javax.swing.JComboBox<>();
        lNroFactProv = new javax.swing.JLabel();
        tfNroFactProv = new javax.swing.JTextField();
        lFecha = new javax.swing.JLabel();
        tfFecha = new javax.swing.JTextField();
        lEstado = new javax.swing.JLabel();
        cxEstado = new javax.swing.JComboBox<>();
        lTipoFactura = new javax.swing.JLabel();
        cxTipoFactura = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tFacturaProvDet = new javax.swing.JTable();
        lEstado1 = new javax.swing.JLabel();
        tfTotal = new javax.swing.JTextField();
        bCreate = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bConsultar = new javax.swing.JButton();
        lMsg = new javax.swing.JLabel();
        bClean = new javax.swing.JButton();
        bAdd = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        bDelete2 = new javax.swing.JButton();
        pCaja = new javax.swing.JPanel();
        tpSCaja = new javax.swing.JTabbedPane();
        pFacturaVenta = new javax.swing.JPanel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tpPrimary.setBackground(new java.awt.Color(255, 255, 255));
        tpPrimary.setToolTipText("");
        tpPrimary.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        tpPrimary.setOpaque(true);

        tpSParametros.setBackground(new java.awt.Color(255, 255, 255));
        tpSParametros.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N

        pEmpresas.setBackground(new java.awt.Color(255, 255, 255));

        lId.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        lId.setText("Id Empresa");

        lId1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        lId1.setText("Descripci√≥n");

        tfId.setBackground(new java.awt.Color(229, 232, 237));
        tfId.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        tfId.setBorder(null);
        tfId.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tfId.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        tfId.setEnabled(false);
        tfId.setBorder(BorderFactory.createCompoundBorder(
            tfId.getBorder(), BorderFactory.createEmptyBorder(5, 5, 5, 5)));

    tfDescripcion.setBackground(new java.awt.Color(229, 232, 237));
    tfDescripcion.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    tfDescripcion.setBorder(null);
    tfDescripcion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    tfDescripcion.setBorder(BorderFactory.createCompoundBorder(
        tfDescripcion.getBorder(), BorderFactory.createEmptyBorder(5, 5, 5, 5)));

lEmpresa.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(172, 95, 200), 1, true));
lEmpresa.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
lEmpresa.setSelectionBackground(new java.awt.Color(229, 232, 237));
lEmpresa.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
    public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        lEmpresaValueChanged(evt);
    }
    });
    empresas = Formulario.Empresas.populateList(lEmpresa, conexion);
    jScrollPane1.setViewportView(lEmpresa);

    bCreate1.setBackground(new java.awt.Color(255, 255, 255));
    bCreate1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    bCreate1.setText("Insertar");
    bCreate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(84, 52, 178)));
    bCreate1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bCreate1.setFocusPainted(false);
    bCreate1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bCreate1ActionPerformed(evt);
        }
    });

    bUpdate1.setBackground(new java.awt.Color(255, 255, 255));
    bUpdate1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    bUpdate1.setText("Actualizar");
    bUpdate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(84, 52, 178)));
    bUpdate1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bUpdate1.setFocusPainted(false);
    bUpdate1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bUpdate1ActionPerformed(evt);
        }
    });

    bDelete1.setBackground(new java.awt.Color(255, 255, 255));
    bDelete1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    bDelete1.setText("Eliminar");
    bDelete1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(84, 52, 178)));
    bDelete1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bDelete1.setFocusPainted(false);
    bDelete1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bDelete1ActionPerformed(evt);
        }
    });

    lMsg1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N

    javax.swing.GroupLayout pEmpresasLayout = new javax.swing.GroupLayout(pEmpresas);
    pEmpresas.setLayout(pEmpresasLayout);
    pEmpresasLayout.setHorizontalGroup(
        pEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pEmpresasLayout.createSequentialGroup()
            .addGroup(pEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pEmpresasLayout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addGroup(pEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tfId)
                        .addComponent(tfDescripcion)
                        .addGroup(pEmpresasLayout.createSequentialGroup()
                            .addGroup(pEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lId1)
                                .addComponent(lId))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGap(50, 50, 50))
                .addGroup(pEmpresasLayout.createSequentialGroup()
                    .addGroup(pEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pEmpresasLayout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(bCreate1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(bUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(bDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pEmpresasLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lMsg1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(27, 27, 27))
    );
    pEmpresasLayout.setVerticalGroup(
        pEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pEmpresasLayout.createSequentialGroup()
            .addGap(45, 45, 45)
            .addGroup(pEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(pEmpresasLayout.createSequentialGroup()
                    .addComponent(lId)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(25, 25, 25)
                    .addComponent(lId1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lMsg1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(80, 80, 80)
                    .addGroup(pEmpresasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bCreate1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jScrollPane1))
            .addContainerGap(88, Short.MAX_VALUE))
    );

    tpSParametros.addTab("Empresas", pEmpresas);

    javax.swing.GroupLayout pParametrosLayout = new javax.swing.GroupLayout(pParametros);
    pParametros.setLayout(pParametrosLayout);
    pParametrosLayout.setHorizontalGroup(
        pParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tpSParametros, javax.swing.GroupLayout.Alignment.TRAILING)
    );
    pParametrosLayout.setVerticalGroup(
        pParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tpSParametros)
    );

    forms.ABM.Productos abmProductos = new forms.ABM.Productos(conexion);
    tpSParametros.addTab("Productos", abmProductos);

    tpPrimary.addTab("PAR√ÅMETROS", pParametros);

    tpSMantenimiento.setBackground(new java.awt.Color(255, 255, 255));
    tpSMantenimiento.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
    tpSMantenimiento.setVerifyInputWhenFocusTarget(false);
    forms.ABM.Personas abmPersonas = new forms.ABM.Personas(conexion);
    tpSMantenimiento.addTab("Personas", abmPersonas);
    forms.ABM.Recepciones abmRecepciones = new forms.ABM.Recepciones(conexion);
    tpSMantenimiento.addTab("Recepciones", abmRecepciones);

    pFacturaProv.setBackground(new java.awt.Color(255, 255, 255));

    laEmpresa.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    laEmpresa.setText("Empresa");

    cxEmpresa.setBackground(new java.awt.Color(229, 232, 237));
    cxEmpresa.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    cxEmpresa.setPreferredSize(new java.awt.Dimension(1, 15));
    empresas = Formulario.Empresas.populateComboBox(cxEmpresa, conexion);

    lNroFactProv.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    lNroFactProv.setText("Nro. Factura Prov.");

    tfNroFactProv.setBackground(new java.awt.Color(229, 232, 237));
    tfNroFactProv.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    tfNroFactProv.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(84, 52, 178)));
    tfNroFactProv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    tfNroFactProv.setDisabledTextColor(new java.awt.Color(51, 51, 51));
    tfNroFactProv.setBorder(BorderFactory.createCompoundBorder(
        tfNroFactProv.getBorder(), BorderFactory.createEmptyBorder(5, 5, 5, 5)));

lFecha.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
lFecha.setText("Fecha");

tfFecha.setBackground(new java.awt.Color(229, 232, 237));
tfFecha.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
tfFecha.setBorder(null);
tfFecha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
tfFecha.setDisabledTextColor(new java.awt.Color(51, 51, 51));
tfFecha.setBorder(BorderFactory.createCompoundBorder(
    tfFecha.getBorder(), BorderFactory.createEmptyBorder(5, 5, 5, 5)));

    lEstado.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    lEstado.setText("Estado");

    cxEstado.setBackground(new java.awt.Color(229, 232, 237));
    cxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTIVO", "CANCELADO", "ANULADO" }));
    cxEstado.setToolTipText("");
    cxEstado.setPreferredSize(new java.awt.Dimension(1, 15));

    lTipoFactura.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    lTipoFactura.setText("Tipo Factura");

    cxTipoFactura.setBackground(new java.awt.Color(229, 232, 237));
    cxTipoFactura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONTADO", "CR√âDITO" }));
    cxTipoFactura.setPreferredSize(new java.awt.Dimension(1, 15));

    tFacturaProvDet.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    tFacturaProvDet.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {},
        new String [] {
            "√çtem", "Producto", "Descripci√≥n", "Cantidad", "Importe"
        }
    ));
    tFacturaProvDet.setShowGrid(false);
    jScrollPane2.setViewportView(tFacturaProvDet);

    lEstado1.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    lEstado1.setText("Total");

    tfTotal.setBackground(new java.awt.Color(229, 232, 237));
    tfTotal.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    tfTotal.setBorder(null);
    tfTotal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    tfTotal.setDisabledTextColor(new java.awt.Color(51, 51, 51));
    tfTotal.setEnabled(false);
    tfTotal.setBorder(BorderFactory.createCompoundBorder(
        tfTotal.getBorder(), BorderFactory.createEmptyBorder(5, 5, 5, 5)));

bCreate.setBackground(new java.awt.Color(255, 255, 255));
bCreate.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
bCreate.setText("Insertar");
bCreate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(84, 52, 178)));
bCreate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
bCreate.setFocusPainted(false);
bCreate.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        bCreateActionPerformed(evt);
    }
    });

    bUpdate.setBackground(new java.awt.Color(255, 255, 255));
    bUpdate.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    bUpdate.setText("Actualizar");
    bUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(84, 52, 178)));
    bUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bUpdate.setFocusPainted(false);
    bUpdate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bUpdateActionPerformed(evt);
        }
    });

    bDelete.setBackground(new java.awt.Color(255, 255, 255));
    bDelete.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    bDelete.setText("Eliminar");
    bDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(84, 52, 178)));
    bDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bDelete.setFocusPainted(false);
    bDelete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bDeleteActionPerformed(evt);
        }
    });

    bConsultar.setBackground(new java.awt.Color(255, 255, 255));
    bConsultar.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
    bConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/search.png"))); // NOI18N
    bConsultar.setToolTipText("Consultar");
    bConsultar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(84, 52, 178)));
    bConsultar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bConsultar.setFocusPainted(false);
    bConsultar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bConsultarActionPerformed(evt);
        }
    });

    lMsg.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N

    bClean.setBackground(new java.awt.Color(255, 255, 255));
    bClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/broom.png"))); // NOI18N
    bClean.setToolTipText("Limpiar");
    bClean.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(172, 95, 200)));
    bClean.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bClean.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bCleanActionPerformed(evt);
        }
    });

    bAdd.setBackground(new java.awt.Color(255, 255, 255));
    bAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/add.png"))); // NOI18N
    bAdd.setToolTipText("Agregar Nuevo ");
    bAdd.setBorder(null);
    bAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bAdd.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bAddActionPerformed(evt);
        }
    });

    bEdit.setBackground(new java.awt.Color(255, 255, 255));
    bEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/edit.png"))); // NOI18N
    bEdit.setToolTipText("Editar");
    bEdit.setBorder(null);
    bEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bEdit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bEditActionPerformed(evt);
        }
    });

    bDelete2.setBackground(new java.awt.Color(255, 255, 255));
    bDelete2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/delete.png"))); // NOI18N
    bDelete2.setToolTipText("Eliminar");
    bDelete2.setBorder(null);
    bDelete2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    bDelete2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            bDelete2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout pFacturaProvLayout = new javax.swing.GroupLayout(pFacturaProv);
    pFacturaProv.setLayout(pFacturaProvLayout);
    pFacturaProvLayout.setHorizontalGroup(
        pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pFacturaProvLayout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pFacturaProvLayout.createSequentialGroup()
                    .addComponent(bCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pFacturaProvLayout.createSequentialGroup()
                    .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pFacturaProvLayout.createSequentialGroup()
                            .addComponent(laEmpresa)
                            .addGap(18, 18, 18)
                            .addComponent(cxEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bClean))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pFacturaProvLayout.createSequentialGroup()
                            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(pFacturaProvLayout.createSequentialGroup()
                                    .addComponent(lNroFactProv)
                                    .addGap(18, 18, 18)
                                    .addComponent(tfNroFactProv, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pFacturaProvLayout.createSequentialGroup()
                                    .addComponent(lEstado)
                                    .addGap(18, 18, 18)
                                    .addComponent(cxEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGap(0, 0, 0)
                            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pFacturaProvLayout.createSequentialGroup()
                                    .addComponent(bConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lFecha))
                                .addComponent(lTipoFactura, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(26, 26, 26)
                            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cxTipoFactura, 0, 186, Short.MAX_VALUE)
                                .addComponent(tfFecha)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pFacturaProvLayout.createSequentialGroup()
                            .addComponent(lMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lEstado1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pFacturaProvLayout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bDelete2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGap(23, 23, 23))))
    );
    pFacturaProvLayout.setVerticalGroup(
        pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(pFacturaProvLayout.createSequentialGroup()
            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pFacturaProvLayout.createSequentialGroup()
                    .addGap(46, 46, 46)
                    .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(laEmpresa)
                        .addComponent(cxEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pFacturaProvLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bClean)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(bConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNroFactProv, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lNroFactProv)
                    .addComponent(lFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(17, 17, 17)
            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cxTipoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lTipoFactura)
                .addComponent(lEstado))
            .addGap(35, 35, 35)
            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pFacturaProvLayout.createSequentialGroup()
                    .addComponent(bAdd)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bEdit)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bDelete2)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lEstado1)
                .addComponent(lMsg))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(pFacturaProvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(bCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(21, 21, 21))
    );

    tpSMantenimiento.addTab("Factura Proveedor", pFacturaProv);

    javax.swing.GroupLayout pMantenimientosLayout = new javax.swing.GroupLayout(pMantenimientos);
    pMantenimientos.setLayout(pMantenimientosLayout);
    pMantenimientosLayout.setHorizontalGroup(
        pMantenimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tpSMantenimiento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 576, Short.MAX_VALUE)
    );
    pMantenimientosLayout.setVerticalGroup(
        pMantenimientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tpSMantenimiento)
    );

    tpPrimary.addTab("MANTENIMIENTO", pMantenimientos);

    tpSCaja.setBackground(new java.awt.Color(255, 255, 255));
    tpSCaja.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N

    pFacturaVenta.setBackground(new java.awt.Color(255, 255, 255));

    javax.swing.GroupLayout pFacturaVentaLayout = new javax.swing.GroupLayout(pFacturaVenta);
    pFacturaVenta.setLayout(pFacturaVentaLayout);
    pFacturaVentaLayout.setHorizontalGroup(
        pFacturaVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 571, Short.MAX_VALUE)
    );
    pFacturaVentaLayout.setVerticalGroup(
        pFacturaVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 404, Short.MAX_VALUE)
    );

    tpSCaja.addTab("Factura Venta", pFacturaVenta);

    javax.swing.GroupLayout pCajaLayout = new javax.swing.GroupLayout(pCaja);
    pCaja.setLayout(pCajaLayout);
    pCajaLayout.setHorizontalGroup(
        pCajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tpSCaja, javax.swing.GroupLayout.Alignment.TRAILING)
    );
    pCajaLayout.setVerticalGroup(
        pCajaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tpSCaja)
    );

    tpPrimary.addTab("CAJA", pCaja);

    // Label Parametros
    JLabel laParametros = new JLabel();
    laParametros.setBackground(new java.awt.Color(255, 255, 255));
    laParametros.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
    laParametros.setIcon(new javax.swing.ImageIcon("E:\\Users\\HP\\Documents\\NetBeansProjects\\trabajo_practico\\src\\assets\\img\\parametros.png")); // NOI18N
    laParametros.setText("PAR√ÅMETROS");
    laParametros.setPreferredSize(new Dimension(130, 30));
    tpPrimary.setTabComponentAt(0, laParametros);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tpPrimary, javax.swing.GroupLayout.Alignment.TRAILING)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(tpPrimary, javax.swing.GroupLayout.Alignment.TRAILING)
    );

    // Label Mantenimientos
    JLabel laMantenimientos = new JLabel();
    laMantenimientos.setBackground(new java.awt.Color(255, 255, 255));
    laMantenimientos.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
    laMantenimientos.setIcon(new javax.swing.ImageIcon("E:\\Users\\HP\\Documents\\NetBeansProjects\\trabajo_practico\\src\\assets\\img\\mantenimientos.png")); // NOI18N
    laMantenimientos.setText("MANTENIMIENTOS");
    tpPrimary.setPreferredSize(new Dimension(130, 30));
    tpPrimary.setTabComponentAt(1, laMantenimientos);

    // Label Caja
    JLabel laCaja = new JLabel();
    laCaja.setBackground(new java.awt.Color(255, 255, 255));
    laCaja.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
    laCaja.setIcon(new javax.swing.ImageIcon("E:\\Users\\HP\\Documents\\NetBeansProjects\\trabajo_practico\\src\\assets\\img\\caja.png")); // NOI18N
    laCaja.setText("CAJA");
    laCaja.setPreferredSize(new Dimension(100, 30));
    tpPrimary.setTabComponentAt(2, laCaja);
    tpPrimary.getAccessibleContext().setAccessibleName("");

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lEmpresaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lEmpresaValueChanged
        if (lEmpresa.getSelectedValue() != null) {
            String descripcion = lEmpresa.getSelectedValue();
            int index = lEmpresa.getSelectedIndex();
            String id = String.valueOf(empresas.get(index).getId());

            tfId.setText(id);
            tfDescripcion.setText(descripcion);
        }
    }//GEN-LAST:event_lEmpresaValueChanged

    private void bCreate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCreate1ActionPerformed
        try {
            String descripcion = tfDescripcion.getText();
            if (descripcion.equals("")) {
                msg = "El campo descripci√≥n no puede estar vac√≠o";
                Formulario.General.setMsg(0, lMsg, msg);
            } else {
                int response = conexion.fc_inse_empresa(conexion.recuSigteNumero("EMPRESAS"), descripcion);
                if (response == 1) {
                    lEmpresa.clearSelection();
                    empresas = Formulario.Empresas.populateList(lEmpresa, conexion);
                    tfDescripcion.setText("");
                    tfId.setText("");
                    msg = "Registro insertado correctamente";
                } else {
                    msg = "No se pudo insertar el registro";
                }
                Formulario.General.setMsg(response, lMsg, msg);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bCreate1ActionPerformed

    private void bUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdate1ActionPerformed
        try {
            int id = Integer.parseInt(tfId.getText());
            String descripcion = tfDescripcion.getText();

            int response = conexion.fc_actu_empresa(id, descripcion);
            if (response == 1) {
                empresas = Formulario.Empresas.populateList(lEmpresa, conexion);
                msg = "Registro actualizado correctamente";
            } else {
                msg = "No se pudo actualizar el registro";
            }
            Formulario.General.setMsg(response, lMsg, msg);
        } catch (SQLException ex) {
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bUpdate1ActionPerformed

    private void bDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelete1ActionPerformed
        try {
            int id = Integer.parseInt(tfId.getText());

            int response = conexion.fc_dele_empresa(id);
            if (response == 1) {
                lEmpresa.clearSelection();
                empresas = Formulario.Empresas.populateList(lEmpresa, conexion);
                tfDescripcion.setText("");
                tfId.setText("");
                msg = "Registro eliminado correctamente";
            } else {
                msg = "No se pudo eliminar el registro";
            }
            Formulario.General.setMsg(response, lMsg, msg);
        } catch (SQLException ex) {
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bDelete1ActionPerformed

    private void bDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelete2ActionPerformed
        if (!tfNroFactProv.getText().equals("")) {
            int nroFacturaProv = Integer.parseInt(tfNroFactProv.getText());
            int index = tFacturaProvDet.getSelectedRow();
            if (index == -1) {
                msg = "Seleccionar la fila que desea eliminar";
                Formulario.General.setMsg(0, lMsg, msg);
                int item = facturasProvDet.get(index).getItem();
                int response;
                try {
                    response = conexion.fc_dele_factura_prov_det(item, nroFacturaProv);
                    if (response == 1) {
                        facturasProvDet = Formulario.FacturasProvDet.populateTable(tFacturaProvDet, nroFacturaProv, conexion);
                        tfTotal.setText(String.valueOf(Formulario.FacturasProvDet.calcularTotal(facturasProvDet)));
                        msg = "Registro eliminado correctamente";
                    } else {
                        msg = "No se pudo eliminar el registro";
                    }
                    Formulario.General.setMsg(response, lMsg, msg);
                } catch (SQLException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            msg = "Nro. Factura Proveedor no puede estar vac√≠o";
            Formulario.General.setMsg(0, lMsg, msg);
        }
    }//GEN-LAST:event_bDelete2ActionPerformed

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
        if (!tfNroFactProv.getText().equals("")) {
            int EDITAR = 2;
            int index = tFacturaProvDet.getSelectedRow();

            if (index == -1) {
                msg = "Seleccionar la fila que desea editar";
                Formulario.General.setMsg(0, lMsg, msg);
            } else {
                JFrame frame = new JFrame();
                FacturasProvDet pAddFacturaProvDet = new FacturasProvDet(EDITAR, this);
                frame.add(pAddFacturaProvDet);
                frame.setVisible(true);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setSize(400, 400);
                frame.setLocationRelativeTo(null);
            }
        } else {
            msg = "Nro. Factura Proveedor no puede estar vac√≠o";
            Formulario.General.setMsg(0, lMsg, msg);
        }
    }//GEN-LAST:event_bEditActionPerformed

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        if (!tfNroFactProv.getText().equals("")) {
            int INSERTAR = 1;

            JFrame frame = new JFrame();
            FacturasProvDet pAddFacturaProvDet = new FacturasProvDet(INSERTAR, this);
            frame.add(pAddFacturaProvDet);
            frame.setVisible(true);
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.setSize(400, 400);
            frame.setLocationRelativeTo(null);
        } else {
            msg = "Nro. Factura Proveedor no puede estar vac√≠o";
            Formulario.General.setMsg(0, lMsg, msg);
        }
    }//GEN-LAST:event_bAddActionPerformed

    private void clear() {
        cxEmpresa.setSelectedIndex(0);
        tfNroFactProv.setText("");
        tfFecha.setText("");
        cxEstado.setSelectedIndex(0);
        cxTipoFactura.setSelectedIndex(0);
        facturasProvDet = Formulario.FacturasProvDet.clearTable(tFacturaProvDet);
        tfTotal.setText("");
    }

    private void bCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCleanActionPerformed
        clear();
    }//GEN-LAST:event_bCleanActionPerformed

    private void bConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarActionPerformed
        try {
            if (tfNroFactProv.getText().equals("")) {
                msg = "Nro. Factura Prov. no puede estar vac√≠o";
                Formulario.General.setMsg(0, lMsg, msg);
            } else {
                // Nro. Factura Proveedor
                int nroFacturaProv = Integer.parseInt(tfNroFactProv.getText());
                String query = "SELECT fapr_nro_factura_prov, TO_CHAR(fapr_fecha, 'dd/mm/yyyy'), fapr_estado, "
                        + "fapr_tipo_factura, fapr_id_empresa FROM facturas_prov WHERE fapr_nro_factura_prov = " + nroFacturaProv;

                ResultSet rset = conexion.sql(query);

                if (Formulario.General.resultSetIsEmpty(rset) == true) {
                    msg = "No se encuentra ninguna Factura Proveedor con ese n√∫mero";
                    Formulario.General.setMsg(0, lMsg, msg);
                } else {
                    lMsg.setText("");
                    do {
                        tfFecha.setText(rset.getString(2));
                        cxEstado.setSelectedIndex(rset.getInt(3) - 1);
                        cxTipoFactura.setSelectedIndex(rset.getInt(4) - 1);
                        cxEmpresa.setSelectedIndex(Formulario.Empresas.findEmpresa(rset.getInt(5), empresas));
                        facturasProvDet = Formulario.FacturasProvDet.populateTable(tFacturaProvDet, nroFacturaProv, conexion);
                        tfTotal.setText(String.valueOf(Formulario.FacturasProvDet.calcularTotal(facturasProvDet)));
                    } while (rset.next());
                }
            }
        } catch (SQLException ex) {
            msg = "Error al consultar";
            Formulario.General.setMsg(0, lMsg, msg);
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            msg = "Error al consultar";
            Formulario.General.setMsg(0, lMsg, msg);
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        };
    }//GEN-LAST:event_bConsultarActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        try {
            // Nro. Factura Proveedor
            int nroFacturaProv = Integer.parseInt(tfNroFactProv.getText());
            
            for (FacturaProvDet fpde : facturasProvDet) {
                if (fpde.getItem() > 0) {
                    if (conexion.fc_dele_factura_prov_det(fpde.getItem(), nroFacturaProv) == 1 ){
                        System.out.println("Detalle eliminado correctamente");
                    }
                }
            }

            int response = conexion.fc_dele_factura_prov(nroFacturaProv);
            if (response == 1) {
                msg = "Registro eliminado correctamente";
                clear();
            } else {
                msg = "No se pudo eliminar el registro";
            }
            Formulario.General.setMsg(response, lMsg, msg);
        } catch (SQLException ex) {
            msg = "No se pudo eliminar el registro";
            Formulario.General.setMsg(0, lMsg, msg);
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            msg = "No se pudo eliminar el registro";
            Formulario.General.setMsg(0, lMsg, msg);
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        };
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        try {
            // Nro. Factura Proveedor
            int nroFacturaProv = Integer.parseInt(tfNroFactProv.getText());
            // Id Empresa
            int index = cxEmpresa.getSelectedIndex();
            int idEmpresa = empresas.get(index).getId();
            String fecha = tfFecha.getText();
            // Estado (1. ACTIVO, 2. CANCELADO, 3. ANULADO )
            int estado = cxEstado.getSelectedIndex() + 1;
            // Tipo (1. CONTADO, 2. CREDITO)
            int tipo = cxTipoFactura.getSelectedIndex() + 1;

            int response = conexion.fc_actu_factura_prov(nroFacturaProv, fecha, estado, tipo, idEmpresa);
            if (response == 1) {
                msg = "Registro actualizado correctamente";
                for (FacturaProvDet fpde : facturasProvDet) {
                    if (fpde.getItem() == 0) {
                        if (conexion.fc_inse_factura_prov_det(conexion.recuSigteNumero("FACTURAS_PROV_DET", nroFacturaProv),
                                fpde.getCantidad(), fpde.getImporte(), nroFacturaProv, fpde.getCodigoProducto()) == 1) {
                            System.out.println("Detalle insertado correctamente");
                        } else {
                            System.out.println("Error al insertar detalle");
                        }
                    } else {
                        if (conexion.fc_actu_factura_prov_det(fpde.getItem(),
                                fpde.getCantidad(), fpde.getImporte(), nroFacturaProv, fpde.getCodigoProducto()) == 1) {
                            System.out.println("Detalle actualizado correctamente");
                        } else {
                            System.out.println("Error al actualizar detalle");
                        }
                    }
                }
                Formulario.FacturasProvDet.populateTable(tFacturaProvDet, nroFacturaProv, conexion);
            } else {
                msg = "No se pudo actualizar el registro";
            }
            Formulario.General.setMsg(response, lMsg, msg);
        } catch (Exception ex) {
            msg = "No se pudo actualizar el registro";
            Formulario.General.setMsg(0, lMsg, msg);
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        };
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCreateActionPerformed
        try {
            // Id Empresa
            int index = cxEmpresa.getSelectedIndex();
            int idEmpresa = empresas.get(index).getId();
            // Fecha
            String fecha = tfFecha.getText();
            // Estado (1. ACTIVO, 2. CANCELADO, 3. ANULADO )
            int estado = cxEstado.getSelectedIndex() + 1;
            // Tipo (1. CONTADO, 2. CREDITO)
            int tipo = cxTipoFactura.getSelectedIndex() + 1;
            int nroFactProv = conexion.recuSigteNumero("FACTURAS_PROV");

            int response = conexion.fc_inse_factura_prov(nroFactProv,
                    fecha, estado, tipo, idEmpresa);
            if (response == 1) {
                msg = "Registro insertado correctamente";
                for (FacturaProvDet fpde : facturasProvDet) {
                    if (conexion.fc_inse_factura_prov_det(conexion.recuSigteNumero("FACTURAS_PROV_DET", nroFactProv),
                            fpde.getCantidad(), fpde.getImporte(), nroFactProv, fpde.getCodigoProducto()) == 1) {
                        System.out.println("Detalle insertado correctamente");
                    } else {
                        System.out.println("Error al insertar detalle");
                    }
                }

            } else {
                msg = "No se pudo insertar el registro";
            }
            Formulario.General.setMsg(response, lMsg, msg);
        } catch (Exception ex) {
            msg = "No se pudo insertar el registro";
            Formulario.General.setMsg(0, lMsg, msg);
            Logger.getLogger(Empresa.class.getName()).log(Level.SEVERE, null, ex);
        };
    }//GEN-LAST:event_bCreateActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bClean;
    private javax.swing.JButton bConsultar;
    private javax.swing.JButton bCreate;
    private javax.swing.JButton bCreate1;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bDelete1;
    private javax.swing.JButton bDelete2;
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bUpdate;
    private javax.swing.JButton bUpdate1;
    private javax.swing.JComboBox<String> cxEmpresa;
    private javax.swing.JComboBox<String> cxEstado;
    private javax.swing.JComboBox<String> cxTipoFactura;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JList<String> lEmpresa;
    private javax.swing.JLabel lEstado;
    private javax.swing.JLabel lEstado1;
    private javax.swing.JLabel lFecha;
    private javax.swing.JLabel lId;
    private javax.swing.JLabel lId1;
    private javax.swing.JLabel lMsg;
    private javax.swing.JLabel lMsg1;
    private javax.swing.JLabel lNroFactProv;
    private javax.swing.JLabel lTipoFactura;
    private javax.swing.JLabel laEmpresa;
    private javax.swing.JPanel pCaja;
    private javax.swing.JPanel pEmpresas;
    private javax.swing.JPanel pFacturaProv;
    private javax.swing.JPanel pFacturaVenta;
    private javax.swing.JPanel pMantenimientos;
    private javax.swing.JPanel pParametros;
    private javax.swing.JTable tFacturaProvDet;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfFecha;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfNroFactProv;
    private javax.swing.JTextField tfTotal;
    private javax.swing.JTabbedPane tpPrimary;
    private javax.swing.JTabbedPane tpSCaja;
    private javax.swing.JTabbedPane tpSMantenimiento;
    private javax.swing.JTabbedPane tpSParametros;
    // End of variables declaration//GEN-END:variables
}
